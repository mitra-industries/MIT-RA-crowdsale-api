{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Simple HTTP API to the Ethereum blockchain for MIT-RA Crowdsale.",
    "title": "MIT-RA Crowdsale Ethereum API.",
    "contact": {
      "name": "John Dobbin",
      "email": "drjohn.dobbin@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.3.12"
  },
  "basePath": "/",
  "paths": {
    "/crowdsale/add": {
      "post": {
        "description": "Add tokens for specified beneficiary (referral system tokens, for example).",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "crowdsale"
        ],
        "summary": "Add tokens",
        "operationId": "addTokens",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddressWithAmount"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/crowdsale/balance/:address": {
      "get": {
        "description": "Get MIT-RA Crowdsale issued (but not paid) token balance for particular Ethereum address.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "crowdsale"
        ],
        "summary": "Get token balance",
        "operationId": "getCrowdsaleBalance",
        "parameters": [
          {
            "type": "string",
            "example": "0xFdb3Ae550c4f6a8FD170C3019c97D4F152b65373",
            "x-go-name": "Address",
            "description": "Ethereum address",
            "name": "address",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalanceSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/crowdsale/balances": {
      "post": {
        "description": "Get MIT-RA Crowdsale issued (but not paid) token balances for list of Ethereum addresses.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "crowdsale"
        ],
        "summary": "Get token balances",
        "operationId": "getCrowdsaleBalances",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Addresses"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalancesSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/crowdsale/close": {
      "post": {
        "description": "Set closed crowdsale status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "crowdsale"
        ],
        "summary": "Close crowdsale",
        "operationId": "closeSale",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CloseSaleParams"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/crowdsale/events": {
      "post": {
        "description": "Get MIT-RA Crowdsale events.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "crowdsale"
        ],
        "summary": "Get events.",
        "operationId": "events",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ContractEventResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/crowdsale/multiplier": {
      "post": {
        "description": "Set Bonus tokens rate multiplier, x1000 (i.e. 1200 is 1.2 x 1000 = 120% x1000 = +20% bonus)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "crowdsale"
        ],
        "summary": "Set multiplier",
        "operationId": "setMultiplier",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetMultiplierParams"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/crowdsale/status": {
      "get": {
        "description": "Get MIT-RA Crowdsale status.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "crowdsale"
        ],
        "summary": "Get status.",
        "operationId": "getStatus",
        "responses": {
          "200": {
            "$ref": "#/responses/CrowdsaleStatusResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/mit-ra/balance/:address": {
      "get": {
        "description": "Get MIT-RA token balance for particular Ethereum address.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "token"
        ],
        "summary": "Get balance",
        "operationId": "getMit-raBalance",
        "parameters": [
          {
            "type": "string",
            "example": "0xFdb3Ae550c4f6a8FD170C3019c97D4F152b65373",
            "x-go-name": "Address",
            "description": "Ethereum address",
            "name": "address",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalanceSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/mit-ra/balances": {
      "post": {
        "description": "Get MIT-RA token balances for list of Ethereum addresses.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "token"
        ],
        "summary": "Get balances",
        "operationId": "getMit-raBalances",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Addresses"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalancesSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/wallet/balance/:address": {
      "get": {
        "description": "Get particular Ethereum wallet balance.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ethereum"
        ],
        "summary": "Get balance",
        "operationId": "getEthBalance",
        "parameters": [
          {
            "type": "string",
            "example": "0xFdb3Ae550c4f6a8FD170C3019c97D4F152b65373",
            "x-go-name": "Address",
            "description": "Ethereum address",
            "name": "address",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalanceSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/wallet/balances": {
      "post": {
        "description": "Get balances for list of Ethereum addresses.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ethereum"
        ],
        "summary": "Get balances",
        "operationId": "getEthBalances",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Addresses"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalancesSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "array",
      "title": "Address represents the 20 byte address of an Ethereum account.",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "mit-ra-crowdsale-api/vendor/github.com/ethereum/go-ethereum/common"
    },
    "AddressWithAmount": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-go-name": "Address"
        },
        "amount": {
          "type": "string",
          "x-go-name": "Amount"
        }
      },
      "x-go-package": "mit-ra-crowdsale-api/models"
    },
    "Addresses": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Addresses"
        }
      },
      "x-go-package": "mit-ra-crowdsale-api/models"
    },
    "BlockNonce": {
      "description": "A BlockNonce is a 64-bit hash which proves (combined with the\nmix-hash) that a sufficient amount of computation has been carried\nout on a block.",
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "mit-ra-crowdsale-api/vendor/github.com/ethereum/go-ethereum/core/types"
    },
    "Bloom": {
      "type": "array",
      "title": "Bloom represents a 2048 bit bloom filter.",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "mit-ra-crowdsale-api/vendor/github.com/ethereum/go-ethereum/core/types"
    },
    "CloseSaleParams": {
      "type": "object",
      "properties": {
        "close": {
          "type": "boolean",
          "x-go-name": "Close"
        }
      },
      "x-go-package": "mit-ra-crowdsale-api/models"
    },
    "CrowdsaleStatus": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Ethereum address",
          "type": "string",
          "x-go-name": "Address",
          "example": "0xFdb3Ae550c4f6a8FD170C3019c97D4F152b65373"
        },
        "bonusMultiplier": {
          "description": "Bonus tokens rate multiplier x1000 (i.e. 1200 is 1.2 x 1000 = 120% x1000 = +20% bonus)",
          "type": "string",
          "x-go-name": "BonusMultiplier",
          "example": "1200"
        },
        "rate": {
          "description": "How many token units a buyer gets per wei",
          "type": "string",
          "x-go-name": "Rate",
          "example": "10000"
        },
        "tokensIssued": {
          "description": "Total amount of issued tokens during crowdsale",
          "type": "string",
          "x-go-name": "TokensIssued",
          "example": "2341230000000000000000000"
        },
        "weiRaised": {
          "description": "Total amount of wei raised during crowdsale",
          "type": "string",
          "x-go-name": "WeiRaised",
          "example": "234123000000000000000"
        }
      },
      "x-go-package": "mit-ra-crowdsale-api/models"
    },
    "Events": {
      "type": "object",
      "properties": {
        "addresses": {
          "description": "filter events by list of Ethereum addresses",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Addresses"
        },
        "eventNames": {
          "description": "filter events by list of event names",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "EventNames"
        },
        "startBlock": {
          "description": "get events from specified block",
          "type": "integer",
          "format": "int64",
          "x-go-name": "StartBlock"
        }
      },
      "x-go-package": "mit-ra-crowdsale-api/models"
    },
    "Hash": {
      "type": "array",
      "title": "Hash represents the 32 byte Keccak256 hash of arbitrary data.",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "mit-ra-crowdsale-api/vendor/github.com/ethereum/go-ethereum/common"
    },
    "Header": {
      "type": "object",
      "title": "Header represents a block header in the Ethereum blockchain.",
      "properties": {
        "difficulty": {
          "$ref": "#/definitions/Int"
        },
        "extraData": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          },
          "x-go-name": "Extra"
        },
        "gasLimit": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "GasLimit"
        },
        "gasUsed": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "GasUsed"
        },
        "logsBloom": {
          "$ref": "#/definitions/Bloom"
        },
        "miner": {
          "$ref": "#/definitions/Address"
        },
        "mixHash": {
          "$ref": "#/definitions/Hash"
        },
        "nonce": {
          "$ref": "#/definitions/BlockNonce"
        },
        "number": {
          "$ref": "#/definitions/Int"
        },
        "parentHash": {
          "$ref": "#/definitions/Hash"
        },
        "receiptsRoot": {
          "$ref": "#/definitions/Hash"
        },
        "sha3Uncles": {
          "$ref": "#/definitions/Hash"
        },
        "stateRoot": {
          "$ref": "#/definitions/Hash"
        },
        "timestamp": {
          "$ref": "#/definitions/Int"
        },
        "transactionsRoot": {
          "$ref": "#/definitions/Hash"
        }
      },
      "x-go-package": "mit-ra-crowdsale-api/vendor/github.com/ethereum/go-ethereum/core/types"
    },
    "Int": {
      "description": "The zero value for an Int represents the value 0.",
      "type": "object",
      "title": "An Int represents a signed multi-precision integer.",
      "x-go-package": "math/big"
    },
    "SetMultiplierParams": {
      "type": "object",
      "properties": {
        "bonusMultiplier": {
          "description": "Bonus tokens rate multiplier x1000 (i.e. 1200 is 1.2 x 1000 = 120% x1000 = +20% bonus)",
          "type": "string",
          "x-go-name": "BonusMultiplier",
          "example": "1200"
        }
      },
      "x-go-package": "mit-ra-crowdsale-api/models"
    }
  },
  "responses": {
    "ContractEventResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "events": {
                "type": "object",
                "properties": {
                  "args": {
                    "description": "event arguments, differ for each event",
                    "type": "object",
                    "properties": {
                      "ownerAddress": {
                        "description": "Ethereum address this events is linked to",
                        "type": "string",
                        "x-go-name": "OwnerAddress",
                        "example": "0xFdb3Ae550c4f6a8FD170C3019c97D4F152b65373"
                      },
                      "weiAmount": {
                        "description": "wei amount raised",
                        "type": "string",
                        "x-go-name": "Amount",
                        "example": "45234000000000000000000"
                      }
                    },
                    "x-go-name": "Args"
                  },
                  "blockHash": {
                    "type": "string",
                    "x-go-name": "BlockHash"
                  },
                  "blockNumber": {
                    "description": "Ethereum block number event was raised in",
                    "type": "integer",
                    "format": "uint64",
                    "x-go-name": "BlockNumber",
                    "example": 4589232
                  },
                  "blockTime": {
                    "type": "string",
                    "x-go-name": "BlockTime"
                  },
                  "name": {
                    "description": "event name",
                    "type": "string",
                    "x-go-name": "Name",
                    "example": "TokenPaid"
                  },
                  "removed": {
                    "type": "boolean",
                    "x-go-name": "Removed"
                  },
                  "transactionHash": {
                    "description": "Ethereum transaction hash",
                    "type": "string",
                    "x-go-name": "TxHash",
                    "example": "0x23682ef776bfb465433e8f6a6e84eab71f039f039e86933aeca20ee46d01d576"
                  },
                  "transactionIndex": {
                    "type": "integer",
                    "format": "uint64",
                    "x-go-name": "TxIndex"
                  }
                },
                "x-go-name": "Events"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "CrowdsaleStatusResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/definitions/CrowdsaleStatus"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "GetBalanceSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "address": {
                "description": "Ethereum address",
                "type": "string",
                "x-go-name": "Address",
                "example": "0xFdb3Ae550c4f6a8FD170C3019c97D4F152b65373"
              },
              "balance": {
                "description": "Ethereum address balance",
                "type": "string",
                "x-go-name": "Balance",
                "example": "42340000000000000000"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "GetBalancesSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "balances": {
                "description": "Ethereum address balances list",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-go-name": "Balances",
                "example": "{\"0xFdb3Ae550c4f6a8FD170C3019c97D4F152b65373\": \"42340000000000000000\"}"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "GetBlockSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "hash": {
                "description": "Block hash",
                "type": "string",
                "x-go-name": "Hash",
                "example": "0x43dbc6e17450307c226e78cc1146a15662fb2ff16369d0e5c24652576b9d8e5e"
              },
              "number": {
                "description": "Block number",
                "type": "string",
                "x-go-name": "Number",
                "example": "5349009"
              },
              "raw": {
                "$ref": "#/definitions/Header"
              },
              "timestamp": {
                "description": "Block creation timestamp",
                "type": "string",
                "x-go-name": "Timestamp",
                "example": "1522415005"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "RestErrorResponse": {
      "description": "Error",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "description": "error code",
                "type": "string",
                "x-go-name": "Code",
                "example": "VALIDATION_ERROR"
              },
              "message": {
                "description": "error description",
                "type": "string",
                "x-go-name": "Message",
                "example": "id should be in UUID format"
              }
            },
            "x-go-name": "Error"
          }
        }
      }
    },
    "TxSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "tx": {
                "description": "Ethereum transaction hash",
                "type": "string",
                "x-go-name": "Tx",
                "example": "0x83422ef776bfb465433e8f6a6e84eab71f039f039e86933aeca20ee46d01d251"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "hash": {
      "type": "apiKey",
      "name": "X-Authorization",
      "in": "header"
    }
  }
}
